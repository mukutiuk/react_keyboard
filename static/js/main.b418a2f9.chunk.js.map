{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressKey","oneRender","pressKeyboard","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAQ,CACNC,SAAU,GACVC,WAAW,GAHf,EAcEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEJ,SAAUG,EAAME,IAAKJ,WAAW,KAfpD,uDAME,WACEK,SAASC,iBAAiB,QAASC,KAAKN,iBAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,iBAX/C,oBAkBE,WACE,MAAgCM,KAAKT,MAA7BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,qBAAKS,UAAU,MAAf,SACE,mBACEA,UAAU,eADZ,SAGGT,EAAS,mCACsBD,EADtB,KAEN,kCA5Bd,GAAyBW,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.b418a2f9.chunk.js","sourcesContent":["import React, { } from 'react';\n\ntype Props = {\n  pressKey: string;\n  oneRender: boolean;\n};\n\nexport class App extends React.Component<Props> {\n  state = {\n    pressKey: '',\n    oneRender: false,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressKeyboard);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.pressKeyboard);\n  }\n\n  pressKeyboard = (event: KeyboardEvent) => {\n    this.setState({ pressKey: event.key, oneRender: true });\n  };\n\n  render() {\n    const { pressKey, oneRender } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p\n          className=\"App__message\"\n        >\n          {oneRender\n            ? `The last pressed key is [${pressKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}