{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressKeyboard","this","document","removeEventListener","addEventListener","event","key","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,cAAe,IAFnB,uDAKE,WACEC,KAAKD,kBANT,kCASE,WACEE,SAASC,oBAAoB,QAASF,KAAKD,iBAV/C,2BAaE,WAAiB,IAAD,OACdE,SAASE,iBAAiB,SAAS,SAACC,GAClC,EAAKN,MAAMC,cAAgBK,EAAMC,SAfvC,oBAmBE,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,mBACEA,UAAU,eADZ,SAGGN,KAAKF,MAAMC,cAAX,mCAC+BC,KAAKF,MAAMC,cAD1C,KAEG,kCA3Bd,GAAyBQ,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.fcdbe009.chunk.js","sourcesContent":["import React, { } from 'react';\n\nexport class App extends React.Component {\n  state = {\n    pressKeyboard: '',\n  };\n\n  componentDidMount() {\n    this.pressKeyboard();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('remuv', this.pressKeyboard);\n  }\n\n  pressKeyboard() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.state.pressKeyboard = event.key;\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p\n          className=\"App__message\"\n        >\n          {this.state.pressKeyboard\n            ? `The last pressed key is [${this.state.pressKeyboard}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}